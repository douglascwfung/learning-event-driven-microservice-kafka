2022-10-26 15:03:52 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2022-10-26 15:03:53 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2022-10-26 15:03:55 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service,config-client, profiles=[reactive_elastic_query], label=null, version=5d0487f579fbc420350ee5b9ddde9760590d5d62, state=null
2022-10-26 15:03:55 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/douglascwfung/spring-cloud-config-server-repo.git/config-client-reactive_elastic_query.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/douglascwfung/spring-cloud-config-server-repo.git/config-client.yml'}]
2022-10-26 15:03:55 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2022-10-26 15:03:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-10-26 15:03:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197ms. Found 0 Elasticsearch repository interfaces.
2022-10-26 15:03:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-10-26 15:03:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21ms. Found 1 Reactive Elasticsearch repository interfaces.
2022-10-26 15:03:56 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d39f8dcc-aa69-3315-8955-73ec0ec47085
2022-10-26 15:03:56 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-10-26 15:03:56 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-10-26 15:03:56 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-10-26 15:03:56 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-10-26 15:03:57 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2022-10-26 15:03:57 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2022-10-26 15:03:57 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2022-10-26 15:03:57 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2022-10-26 15:03:57 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 9c603f64-d1bb-457a-afe4-f44c256df39d

2022-10-26 15:03:59 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8183
2022-10-26 15:04:00 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 9.034 seconds (JVM running for 9.787)
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying reactive elasticsearch for text kafka
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text kafka
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3021559b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3021559b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onSubscribe(FluxMap.MapSubscriber)
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - request(1)
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3021559b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3021559b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3021559b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3021559b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3021559b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:10:25 [reactor-http-nio-4] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@3021559b, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:10:25 [reactor-http-nio-4] ERROR reactor.Flux.Map.1 - onError(org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.)
2022-10-26 15:10:25 [reactor-http-nio-4] ERROR reactor.Flux.Map.1 - 
org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$null$4(SingleNodeHostProvider.java:106)
	at reactor.core.publisher.MonoErrorSupplied.call(MonoErrorSupplied.java:76)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
	at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
	at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
	at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2021)
	at reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onError(FluxOnAssembly.java:390)
	at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:251)
	at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:252)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
	at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
	at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:87)
	at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:197)
	at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:213)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:255)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:406)
	at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243)
	at reactor.core.publisher.DirectProcessor$DirectInner.onNext(DirectProcessor.java:339)
	at reactor.core.publisher.DirectProcessor.onNext(DirectProcessor.java:148)
	at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
	at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:180)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
	at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$TcpClientSubscriber.onError(HttpClientConnect.java:353)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
	at reactor.netty.resources.PooledConnectionProvider$DisposableAcquire.onError(PooledConnectionProvider.java:521)
	at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:423)
	at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$5(SimpleDequePool.java:253)
	at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:172)
	at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
	at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:302)
	at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:252)
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:570)
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:549)
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490)
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615)
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:608)
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:829)
2022-10-26 15:10:25 [reactor-http-nio-4] ERROR c.m.d.e.q.s.c.a.e.h.ElasticQueryServiceErrorHandler - Service runtime exception!
org.springframework.data.elasticsearch.client.NoReachableHostException: Host 'localhost:9200' not reachable. Cluster state is offline.
	at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$null$4(SingleNodeHostProvider.java:106)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	|_ checkpoint ⇢ Handler com.microservices.demo.reactive.elastic.query.service.api.ElasticDocumentController#getDocumentByText(ElasticQueryServiceRequestModel) [DispatcherHandler]
Stack trace:
		at org.springframework.data.elasticsearch.client.reactive.SingleNodeHostProvider.lambda$null$4(SingleNodeHostProvider.java:106)
		at reactor.core.publisher.MonoErrorSupplied.call(MonoErrorSupplied.java:76)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:132)
		at reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1782)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:144)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73)
		at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2344)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2152)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:68)
		at reactor.core.publisher.MonoJust.subscribe(MonoJust.java:54)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4213)
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:97)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onError(MonoFlatMap.java:165)
		at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onError(Operators.java:2021)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onError(MonoPeekTerminal.java:251)
		at reactor.core.publisher.FluxMap$MapConditionalSubscriber.onError(FluxMap.java:252)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onError(FluxPeekFuseable.java:894)
		at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:87)
		at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:197)
		at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:213)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:255)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:406)
		at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:243)
		at reactor.core.publisher.DirectProcessor$DirectInner.onNext(DirectProcessor.java:339)
		at reactor.core.publisher.DirectProcessor.onNext(DirectProcessor.java:148)
		at reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)
		at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
		at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$TcpClientSubscriber.onError(HttpClientConnect.java:353)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
		at reactor.netty.resources.PooledConnectionProvider$DisposableAcquire.onError(PooledConnectionProvider.java:521)
		at reactor.netty.internal.shaded.reactor.pool.AbstractPool$Borrower.fail(AbstractPool.java:423)
		at reactor.netty.internal.shaded.reactor.pool.SimpleDequePool.lambda$drainLoop$5(SimpleDequePool.java:253)
		at reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber.onError(FluxDoOnEach.java:172)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:185)
		at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:302)
		at reactor.netty.resources.PooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer.operationComplete(PooledConnectionProvider.java:252)
		at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:577)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:570)
		at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:549)
		at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:490)
		at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:615)
		at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:608)
		at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)
		at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
		at java.base/java.lang.Thread.run(Thread.java:829)
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying reactive elasticsearch for text kafka
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text kafka
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4765329a, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4765329a, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onSubscribe(FluxMap.MapSubscriber)
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - request(1)
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4765329a, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4765329a, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4765329a, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:30:55 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@4765329a, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 15:30:56 [parallel-1] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=5712375250239025909, userId=1915751381847608081, text=Maecenas pulvinar malesuada Kafka magna magna, createdAt=2022-10-23T21:25:32))
2022-10-26 15:30:56 [reactor-http-nio-4] INFO  reactor.Flux.Map.2 - request(31)
2022-10-26 15:30:56 [parallel-2] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2825915482072591345, userId=3599695386476921451, text=consectetuer dolor malesuada Kafka malesuada massa, createdAt=2022-10-23T21:28:02))
2022-10-26 15:30:57 [parallel-3] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=6027052389827207265, userId=4094599925821969903, text=Fusce ultricies ultricies Kafka lectus ultricies, createdAt=2022-10-26T02:07:15))
2022-10-26 15:30:57 [parallel-4] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3533768590791275120, userId=7307067374387296431, text=purus Fusce massa Kafka purus congue, createdAt=2022-10-26T02:38:08))
2022-10-26 15:30:58 [parallel-5] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=101732517943473235, userId=1249418859647056487, text=Lorem magna congue Kafka posuere pulvinar, createdAt=2022-10-26T03:11:38))
2022-10-26 15:30:58 [parallel-6] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=8988890280175084972, userId=6464900196694848621, text=Fusce sit massa Kafka adipiscing adipiscing, createdAt=2022-10-26T03:28:18))
2022-10-26 15:30:59 [parallel-7] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=622034155624339934, userId=6612217726371798820, text=congue sed elit Kafka amet amet, createdAt=2022-10-26T03:33:49))
2022-10-26 15:31:00 [parallel-8] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3366682845581905250, userId=3350664349999240030, text=lectus adipiscing massa Kafka porttitor Lorem, createdAt=2022-10-26T03:58:19))
2022-10-26 15:31:00 [parallel-9] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=567218930642115381, userId=2094272654348277174, text=elit amet congue Kafka ipsum dolor, createdAt=2022-10-26T03:58:09))
2022-10-26 15:31:01 [parallel-10] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2679731688243023512, userId=4472494977521575428, text=dolor porttitor lectus Kafka sed malesuada, createdAt=2022-10-26T04:00:39))
2022-10-26 15:31:01 [parallel-11] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=1612020086562125540, userId=2552956260762300802, text=consectetuer sed consectetuer Kafka amet Maecenas, createdAt=2022-10-26T04:09:49))
2022-10-26 15:31:02 [parallel-12] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=942431019492740555, userId=2453253098422687199, text=ultricies posuere porttitor Kafka ultricies purus, createdAt=2022-10-26T06:58:55))
2022-10-26 15:31:02 [parallel-13] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=1501576256266212894, userId=5301915108175578509, text=amet posuere malesuada Kafka amet lectus, createdAt=2022-10-23T21:17:22))
2022-10-26 15:31:03 [parallel-14] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=7796642284915174917, userId=6628876854751836411, text=Fusce sit Lorem Kafka Fusce ipsum, createdAt=2022-10-26T02:48:18))
2022-10-26 15:31:03 [parallel-15] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2696818392162975147, userId=4978983419119328094, text=consectetuer malesuada lectus Kafka libero malesuada, createdAt=2022-10-26T02:51:48))
2022-10-26 15:31:04 [parallel-16] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=8795757129241784059, userId=605260600103155291, text=massa sed posuere Kafka libero magna, createdAt=2022-10-26T03:15:08))
2022-10-26 15:31:04 [parallel-1] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=8434075226333677719, userId=8986710326588514231, text=magna dolor pulvinar Kafka posuere adipiscing, createdAt=2022-10-26T03:41:49))
2022-10-26 15:31:05 [parallel-2] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2557039162316532470, userId=1551194599100707394, text=sed adipiscing malesuada Kafka sed dolor, createdAt=2022-10-26T03:41:19))
2022-10-26 15:31:05 [parallel-3] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2128006656981198301, userId=1424693256178195274, text=consectetuer sit Maecenas Kafka Lorem porttitor, createdAt=2022-10-26T03:44:59))
2022-10-26 15:31:06 [parallel-4] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=4608923348263160288, userId=3544100880859777532, text=libero amet libero Kafka dolor malesuada, createdAt=2022-10-26T04:26:39))
2022-10-26 15:31:06 [parallel-5] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=363887484343945182, userId=4722660354485891486, text=malesuada Fusce posuere Kafka porttitor posuere, createdAt=2022-10-26T06:23:25))
2022-10-26 15:31:07 [parallel-6] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=145965655509417062, userId=3791072276117851516, text=posuere libero Maecenas Kafka Maecenas purus, createdAt=2022-10-26T06:50:45))
2022-10-26 15:31:07 [parallel-7] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3803601184157484864, userId=3992173640176354573, text=libero elit porttitor Kafka ipsum adipiscing, createdAt=2022-10-26T06:41:55))
2022-10-26 15:31:08 [parallel-8] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2252523974970386149, userId=112627590277695213, text=malesuada congue magna Kafka pulvinar magna, createdAt=2022-10-26T06:11:45))
2022-10-26 15:31:08 [parallel-8] INFO  reactor.Flux.Map.2 - request(24)
2022-10-26 15:31:08 [parallel-9] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=5084534343786852881, userId=3529669257420715889, text=massa pulvinar malesuada posuere Kafka ipsum purus, createdAt=2022-10-23T21:17:12))
2022-10-26 15:31:09 [parallel-10] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2332172716438976825, userId=1697333129426949370, text=sed sed malesuada lectus Kafka porttitor massa, createdAt=2022-10-23T21:23:42))
2022-10-26 15:31:09 [parallel-11] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=8688794836835257853, userId=4973933122815192801, text=pulvinar adipiscing sit massa Kafka purus Lorem, createdAt=2022-10-26T02:38:58))
2022-10-26 15:31:10 [parallel-12] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2890405850390324608, userId=2417810274602171611, text=magna congue porttitor Fusce Kafka dolor dolor, createdAt=2022-10-26T02:42:08))
2022-10-26 15:31:10 [parallel-13] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3516326195283030065, userId=4101868484317522076, text=Maecenas consectetuer ultricies malesuada Kafka sit magna, createdAt=2022-10-26T02:43:58))
2022-10-26 15:31:11 [parallel-14] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=9130471095649296951, userId=3496179640963114865, text=congue libero elit Maecenas Kafka ultricies lectus, createdAt=2022-10-26T02:56:08))
2022-10-26 15:31:11 [parallel-15] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=6782856041143864411, userId=5044258475157261197, text=dolor sit magna consectetuer Kafka amet elit, createdAt=2022-10-26T03:05:28))
2022-10-26 15:31:12 [parallel-16] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3645631855001121694, userId=5317997765007065281, text=adipiscing congue sit malesuada Kafka sit malesuada, createdAt=2022-10-26T03:15:28))
2022-10-26 15:31:12 [parallel-1] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2724832392896674955, userId=8545960296363737590, text=magna lectus malesuada lectus Kafka adipiscing pulvinar, createdAt=2022-10-26T03:17:28))
2022-10-26 15:31:13 [parallel-2] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3528444453725115219, userId=3622717801455858384, text=ultricies porttitor massa porttitor Kafka amet malesuada, createdAt=2022-10-26T03:16:48))
2022-10-26 15:31:13 [parallel-3] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2984768171100556716, userId=1189646651808905857, text=libero ipsum Fusce pulvinar Kafka magna magna, createdAt=2022-10-26T03:36:19))
2022-10-26 15:31:14 [parallel-4] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2044267968474479892, userId=771410045081225903, text=sit massa porttitor adipiscing Kafka pulvinar amet, createdAt=2022-10-26T04:22:19))
2022-10-26 15:31:14 [parallel-5] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=8598640180123573344, userId=5781585872082773910, text=congue lectus Lorem libero Kafka ipsum elit, createdAt=2022-10-26T04:28:49))
2022-10-26 15:31:15 [parallel-6] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3092236232190555430, userId=1399315401721451545, text=Fusce ultricies adipiscing sit Kafka Maecenas Maecenas, createdAt=2022-10-23T21:12:37))
2022-10-26 15:31:15 [parallel-7] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=4697730852151658675, userId=3293614401171410696, text=libero amet ultricies Lorem Kafka amet porttitor, createdAt=2022-10-23T20:59:14))
2022-10-26 15:31:16 [parallel-8] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=6986748964258424176, userId=209081248454254248, text=Maecenas adipiscing consectetuer sit Kafka dolor dolor, createdAt=2022-10-26T02:20:35))
2022-10-26 15:31:16 [parallel-9] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2046538698113523212, userId=1276485207844836680, text=magna massa lectus ultricies Kafka libero sed, createdAt=2022-10-26T02:23:15))
2022-10-26 15:31:17 [parallel-10] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=5531682942701350596, userId=6087469575917994277, text=congue porttitor Fusce magna Kafka lectus elit, createdAt=2022-10-26T02:55:38))
2022-10-26 15:31:17 [parallel-11] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3286699134926121016, userId=1096368065378534044, text=ipsum amet Lorem porttitor Kafka ultricies consectetuer, createdAt=2022-10-26T03:09:48))
2022-10-26 15:31:18 [parallel-12] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=4300278624535816450, userId=2083161302845408045, text=adipiscing libero sit lectus Kafka dolor porttitor, createdAt=2022-10-26T03:14:18))
2022-10-26 15:31:18 [parallel-13] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=4847010161200269605, userId=3504040542769952210, text=adipiscing Maecenas dolor adipiscing Kafka amet sit, createdAt=2022-10-26T03:29:48))
2022-10-26 15:31:19 [parallel-14] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=5318743730456287523, userId=2882459735468177448, text=Maecenas sed amet porttitor Kafka magna porttitor, createdAt=2022-10-26T04:10:49))
2022-10-26 15:31:19 [parallel-15] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2719399190247328418, userId=7051817035842513376, text=magna dolor congue porttitor Kafka ultricies malesuada, createdAt=2022-10-26T04:14:49))
2022-10-26 15:31:20 [parallel-16] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=1206512431010370542, userId=7793285915818768721, text=purus massa sed sed Kafka libero Lorem, createdAt=2022-10-26T04:14:59))
2022-10-26 15:31:20 [parallel-16] INFO  reactor.Flux.Map.2 - request(24)
2022-10-26 15:31:21 [parallel-1] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3631991675469553436, userId=4111881751072113321, text=lectus massa Lorem porttitor Kafka sed lectus, createdAt=2022-10-26T06:14:35))
2022-10-26 15:31:21 [parallel-2] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=7050905106827646656, userId=4543351751894061781, text=elit sit porttitor ipsum Kafka Lorem adipiscing, createdAt=2022-10-26T06:18:05))
2022-10-26 15:31:22 [parallel-3] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2385988967511415712, userId=342402332706027136, text=Maecenas ipsum magna magna Kafka elit sed, createdAt=2022-10-26T06:43:15))
2022-10-26 15:31:22 [parallel-4] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=7089905449095293035, userId=681319992072588785, text=Maecenas consectetuer massa sed Kafka ultricies purus, createdAt=2022-10-26T06:12:25))
2022-10-26 15:31:23 [parallel-5] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=909843376866692609, userId=5807143755034014936, text=massa malesuada ipsum Fusce Kafka congue sed porttitor, createdAt=2022-10-23T21:15:42))
2022-10-26 15:31:23 [parallel-6] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=6057526009134882126, userId=531724271837854692, text=porttitor magna posuere magna Kafka amet Maecenas ultricies, createdAt=2022-10-26T03:33:59))
2022-10-26 15:31:24 [parallel-7] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=7695596147537579690, userId=404317146122899584, text=consectetuer posuere consectetuer lectus Kafka dolor sit porttitor, createdAt=2022-10-26T03:40:29))
2022-10-26 15:31:24 [parallel-8] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=7810341762352299973, userId=6768077927414890905, text=dolor elit congue congue Kafka elit magna Fusce, createdAt=2022-10-26T06:57:55))
2022-10-26 15:31:25 [parallel-9] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=8405172985156754449, userId=5569926837339335028, text=Maecenas malesuada Maecenas sit Kafka massa elit Fusce, createdAt=2022-10-25T07:31:39))
2022-10-26 15:31:25 [parallel-10] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=4379214475973625665, userId=5599456193316243197, text=posuere porttitor dolor pulvinar Kafka posuere sit congue, createdAt=2022-10-26T02:49:18))
2022-10-26 15:31:26 [parallel-11] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=6500298861474230781, userId=6190423674701764119, text=sed ipsum ultricies consectetuer Kafka posuere pulvinar amet, createdAt=2022-10-26T02:52:08))
2022-10-26 15:31:26 [parallel-12] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=171613605447546374, userId=9201888538870864686, text=posuere magna adipiscing porttitor Kafka posuere posuere Fusce, createdAt=2022-10-26T03:06:38))
2022-10-26 15:31:27 [parallel-13] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=7737197152292168961, userId=9086528289557557739, text=lectus Fusce purus porttitor Kafka Maecenas libero magna, createdAt=2022-10-26T03:49:59))
2022-10-26 15:31:27 [parallel-14] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2066742113672320326, userId=220746149099204587, text=sit amet malesuada ipsum Kafka magna magna amet, createdAt=2022-10-26T03:50:49))
2022-10-26 15:31:28 [parallel-15] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=6295244993944879535, userId=7487494095772543108, text=amet purus adipiscing magna Kafka posuere purus ipsum, createdAt=2022-10-26T04:17:09))
2022-10-26 15:31:28 [parallel-16] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=7907949747885647811, userId=107834084810884258, text=malesuada lectus consectetuer Lorem Kafka ultricies porttitor adipiscing, createdAt=2022-10-26T04:27:29))
2022-10-26 15:31:29 [parallel-1] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=4880162170858465325, userId=888195422503694288, text=massa sed ultricies malesuada Kafka pulvinar posuere sit, createdAt=2022-10-26T06:06:25))
2022-10-26 15:31:29 [parallel-2] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=1281122739308384891, userId=5239050302680730691, text=posuere adipiscing lectus amet Kafka Maecenas malesuada sit, createdAt=2022-10-26T06:13:55))
2022-10-26 15:31:30 [parallel-3] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=1701109853358023579, userId=2088000380044734463, text=purus libero lectus Maecenas Kafka purus adipiscing lectus, createdAt=2022-10-26T06:53:05))
2022-10-26 15:31:30 [parallel-4] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=1761611021623942897, userId=2313431240710888559, text=congue ipsum lectus malesuada Kafka magna Maecenas Fusce, createdAt=2022-10-26T06:35:55))
2022-10-26 15:31:31 [parallel-5] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3650279932791630482, userId=962832454167696832, text=dolor ultricies posuere elit Kafka elit libero libero, createdAt=2022-10-26T06:14:55))
2022-10-26 15:31:31 [parallel-6] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=4200840969510759183, userId=3921305913426034196, text=lectus consectetuer adipiscing porttitor Kafka purus adipiscing purus, createdAt=2022-10-26T06:36:35))
2022-10-26 15:31:32 [parallel-7] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=152390997417663967, userId=7212707581068938885, text=elit purus porttitor congue Kafka lectus sit ultricies, createdAt=2022-10-26T06:53:25))
2022-10-26 15:31:32 [parallel-8] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=1857596008365356888, userId=2752241106948154809, text=lectus ipsum massa lectus ipsum Kafka elit pulvinar purus, createdAt=2022-10-23T21:22:12))
2022-10-26 15:31:32 [parallel-8] INFO  reactor.Flux.Map.2 - request(24)
2022-10-26 15:31:33 [parallel-9] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=7314072643006093119, userId=288360693849206823, text=dolor ultricies sed ipsum purus Kafka elit malesuada massa, createdAt=2022-10-23T21:21:52))
2022-10-26 15:31:33 [parallel-10] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3509868423568364479, userId=6507203028479180536, text=adipiscing sed elit purus lectus Kafka lectus Fusce Lorem, createdAt=2022-10-26T02:19:35))
2022-10-26 15:31:34 [parallel-11] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=3728336320680797859, userId=398442895103574557, text=ipsum amet ultricies libero consectetuer Kafka purus libero posuere, createdAt=2022-10-26T02:41:48))
2022-10-26 15:31:34 [parallel-12] INFO  reactor.Flux.Map.2 - onNext(ElasticQueryServiceResponseModel(id=2316089578280827256, userId=6187103796553327180, text=porttitor sed purus massa porttitor Kafka dolor Maecenas elit, createdAt=2022-10-26T02:48:08))
2022-10-26 16:03:03 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 6.1.5.Final
2022-10-26 16:03:04 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2022-10-26 16:03:06 [main] INFO  o.s.c.c.c.ConfigServicePropertySourceLocator - Located environment: name=reactive-elastic-query-service,config-client, profiles=[reactive_elastic_query], label=null, version=1c8e8737f6f0d00a28a14d4e8a0965a39f54366f, state=null
2022-10-26 16:03:06 [main] INFO  o.s.c.b.c.PropertySourceBootstrapConfiguration - Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/douglascwfung/spring-cloud-config-server-repo.git/config-client-reactive_elastic_query.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/douglascwfung/spring-cloud-config-server-repo.git/config-client.yml'}]
2022-10-26 16:03:06 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - The following profiles are active: reactive_elastic_query
2022-10-26 16:03:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-10-26 16:03:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 198ms. Found 0 Elasticsearch repository interfaces.
2022-10-26 16:03:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-10-26 16:03:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23ms. Found 1 Reactive Elasticsearch repository interfaces.
2022-10-26 16:03:07 [main] INFO  o.s.cloud.context.scope.GenericScope - BeanFactory id=d39f8dcc-aa69-3315-8955-73ec0ec47085
2022-10-26 16:03:08 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-10-26 16:03:08 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-10-26 16:03:08 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-10-26 16:03:08 [main] WARN  o.s.data.convert.CustomConversions - Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-10-26 16:03:09 [main] INFO  o.s.b.a.s.r.ReactiveUserDetailsServiceAutoConfiguration - 

Using generated security password: 4eee04df-82fa-481d-b674-4ac803cb115c

2022-10-26 16:03:09 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Spring Data Elasticsearch: 4.0.4.RELEASE
2022-10-26 16:03:09 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client in build: 7.6.2
2022-10-26 16:03:09 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch Client used: 7.9.1
2022-10-26 16:03:09 [reactor-http-nio-1] WARN  o.s.d.e.support.VersionInfo - Version mismatch in between Elasticsearch Clients build/use: 7.6.2 - 7.9.1
2022-10-26 16:03:09 [reactor-http-nio-1] INFO  o.s.d.e.support.VersionInfo - Version Elasticsearch cluster: 7.9.1
2022-10-26 16:03:11 [main] INFO  o.s.b.w.e.netty.NettyWebServer - Netty started on port(s): 8183
2022-10-26 16:03:12 [main] INFO  c.m.d.r.e.q.s.ReactiveElasticQueryServiceApplication - Started ReactiveElasticQueryServiceApplication in 9.935 seconds (JVM running for 10.757)
2022-10-26 16:07:30 [reactor-http-nio-3] INFO  c.m.d.r.e.q.s.b.i.TwitterElasticQueryService - Querying reactive elasticsearch for text kafka
2022-10-26 16:07:30 [reactor-http-nio-3] INFO  c.m.d.r.e.q.s.b.i.TwitterReactiveElasticQueryClient - Getting data from elasticsearch for text kafka
2022-10-26 16:07:30 [reactor-http-nio-3] INFO  c.m.d.r.e.q.s.a.ElasticDocumentController - Returning from query reactive service for text kafka!
2022-10-26 16:07:30 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79d82798, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 16:07:30 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79d82798, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 16:07:30 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - onSubscribe(FluxMap.MapSubscriber)
2022-10-26 16:07:30 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - request(1)
2022-10-26 16:07:30 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79d82798, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 16:07:30 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79d82798, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 16:07:30 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79d82798, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 16:07:31 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5712375250239025909, userId=1915751381847608081, text=Maecenas pulvinar malesuada Kafka magna magna, createdAt=2022-10-23T21:25:32))
2022-10-26 16:07:31 [reactor-http-nio-3] INFO  reactor.Flux.Map.1 - request(31)
2022-10-26 16:07:31 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2825915482072591345, userId=3599695386476921451, text=consectetuer dolor malesuada Kafka malesuada massa, createdAt=2022-10-23T21:28:02))
2022-10-26 16:07:32 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6027052389827207265, userId=4094599925821969903, text=Fusce ultricies ultricies Kafka lectus ultricies, createdAt=2022-10-26T02:07:15))
2022-10-26 16:07:32 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3533768590791275120, userId=7307067374387296431, text=purus Fusce massa Kafka purus congue, createdAt=2022-10-26T02:38:08))
2022-10-26 16:07:33 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=101732517943473235, userId=1249418859647056487, text=Lorem magna congue Kafka posuere pulvinar, createdAt=2022-10-26T03:11:38))
2022-10-26 16:07:33 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8988890280175084972, userId=6464900196694848621, text=Fusce sit massa Kafka adipiscing adipiscing, createdAt=2022-10-26T03:28:18))
2022-10-26 16:07:34 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=622034155624339934, userId=6612217726371798820, text=congue sed elit Kafka amet amet, createdAt=2022-10-26T03:33:49))
2022-10-26 16:07:35 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3366682845581905250, userId=3350664349999240030, text=lectus adipiscing massa Kafka porttitor Lorem, createdAt=2022-10-26T03:58:19))
2022-10-26 16:07:35 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=567218930642115381, userId=2094272654348277174, text=elit amet congue Kafka ipsum dolor, createdAt=2022-10-26T03:58:09))
2022-10-26 16:07:36 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2679731688243023512, userId=4472494977521575428, text=dolor porttitor lectus Kafka sed malesuada, createdAt=2022-10-26T04:00:39))
2022-10-26 16:07:36 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1612020086562125540, userId=2552956260762300802, text=consectetuer sed consectetuer Kafka amet Maecenas, createdAt=2022-10-26T04:09:49))
2022-10-26 16:07:37 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=942431019492740555, userId=2453253098422687199, text=ultricies posuere porttitor Kafka ultricies purus, createdAt=2022-10-26T06:58:55))
2022-10-26 16:07:37 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1501576256266212894, userId=5301915108175578509, text=amet posuere malesuada Kafka amet lectus, createdAt=2022-10-23T21:17:22))
2022-10-26 16:07:38 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7796642284915174917, userId=6628876854751836411, text=Fusce sit Lorem Kafka Fusce ipsum, createdAt=2022-10-26T02:48:18))
2022-10-26 16:07:38 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2696818392162975147, userId=4978983419119328094, text=consectetuer malesuada lectus Kafka libero malesuada, createdAt=2022-10-26T02:51:48))
2022-10-26 16:07:39 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8795757129241784059, userId=605260600103155291, text=massa sed posuere Kafka libero magna, createdAt=2022-10-26T03:15:08))
2022-10-26 16:07:39 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8434075226333677719, userId=8986710326588514231, text=magna dolor pulvinar Kafka posuere adipiscing, createdAt=2022-10-26T03:41:49))
2022-10-26 16:07:40 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2557039162316532470, userId=1551194599100707394, text=sed adipiscing malesuada Kafka sed dolor, createdAt=2022-10-26T03:41:19))
2022-10-26 16:07:40 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2128006656981198301, userId=1424693256178195274, text=consectetuer sit Maecenas Kafka Lorem porttitor, createdAt=2022-10-26T03:44:59))
2022-10-26 16:07:41 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4608923348263160288, userId=3544100880859777532, text=libero amet libero Kafka dolor malesuada, createdAt=2022-10-26T04:26:39))
2022-10-26 16:07:41 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=363887484343945182, userId=4722660354485891486, text=malesuada Fusce posuere Kafka porttitor posuere, createdAt=2022-10-26T06:23:25))
2022-10-26 16:07:42 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=145965655509417062, userId=3791072276117851516, text=posuere libero Maecenas Kafka Maecenas purus, createdAt=2022-10-26T06:50:45))
2022-10-26 16:07:42 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3803601184157484864, userId=3992173640176354573, text=libero elit porttitor Kafka ipsum adipiscing, createdAt=2022-10-26T06:41:55))
2022-10-26 16:07:43 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2252523974970386149, userId=112627590277695213, text=malesuada congue magna Kafka pulvinar magna, createdAt=2022-10-26T06:11:45))
2022-10-26 16:07:43 [parallel-8] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:07:43 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5084534343786852881, userId=3529669257420715889, text=massa pulvinar malesuada posuere Kafka ipsum purus, createdAt=2022-10-23T21:17:12))
2022-10-26 16:07:44 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2332172716438976825, userId=1697333129426949370, text=sed sed malesuada lectus Kafka porttitor massa, createdAt=2022-10-23T21:23:42))
2022-10-26 16:07:44 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8688794836835257853, userId=4973933122815192801, text=pulvinar adipiscing sit massa Kafka purus Lorem, createdAt=2022-10-26T02:38:58))
2022-10-26 16:07:45 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2890405850390324608, userId=2417810274602171611, text=magna congue porttitor Fusce Kafka dolor dolor, createdAt=2022-10-26T02:42:08))
2022-10-26 16:07:45 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3516326195283030065, userId=4101868484317522076, text=Maecenas consectetuer ultricies malesuada Kafka sit magna, createdAt=2022-10-26T02:43:58))
2022-10-26 16:07:46 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9130471095649296951, userId=3496179640963114865, text=congue libero elit Maecenas Kafka ultricies lectus, createdAt=2022-10-26T02:56:08))
2022-10-26 16:07:46 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6782856041143864411, userId=5044258475157261197, text=dolor sit magna consectetuer Kafka amet elit, createdAt=2022-10-26T03:05:28))
2022-10-26 16:07:47 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3645631855001121694, userId=5317997765007065281, text=adipiscing congue sit malesuada Kafka sit malesuada, createdAt=2022-10-26T03:15:28))
2022-10-26 16:07:47 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2724832392896674955, userId=8545960296363737590, text=magna lectus malesuada lectus Kafka adipiscing pulvinar, createdAt=2022-10-26T03:17:28))
2022-10-26 16:07:48 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3528444453725115219, userId=3622717801455858384, text=ultricies porttitor massa porttitor Kafka amet malesuada, createdAt=2022-10-26T03:16:48))
2022-10-26 16:07:48 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2984768171100556716, userId=1189646651808905857, text=libero ipsum Fusce pulvinar Kafka magna magna, createdAt=2022-10-26T03:36:19))
2022-10-26 16:07:49 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2044267968474479892, userId=771410045081225903, text=sit massa porttitor adipiscing Kafka pulvinar amet, createdAt=2022-10-26T04:22:19))
2022-10-26 16:07:49 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8598640180123573344, userId=5781585872082773910, text=congue lectus Lorem libero Kafka ipsum elit, createdAt=2022-10-26T04:28:49))
2022-10-26 16:07:50 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3092236232190555430, userId=1399315401721451545, text=Fusce ultricies adipiscing sit Kafka Maecenas Maecenas, createdAt=2022-10-23T21:12:37))
2022-10-26 16:07:50 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4697730852151658675, userId=3293614401171410696, text=libero amet ultricies Lorem Kafka amet porttitor, createdAt=2022-10-23T20:59:14))
2022-10-26 16:07:51 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6986748964258424176, userId=209081248454254248, text=Maecenas adipiscing consectetuer sit Kafka dolor dolor, createdAt=2022-10-26T02:20:35))
2022-10-26 16:07:51 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2046538698113523212, userId=1276485207844836680, text=magna massa lectus ultricies Kafka libero sed, createdAt=2022-10-26T02:23:15))
2022-10-26 16:07:52 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5531682942701350596, userId=6087469575917994277, text=congue porttitor Fusce magna Kafka lectus elit, createdAt=2022-10-26T02:55:38))
2022-10-26 16:07:52 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3286699134926121016, userId=1096368065378534044, text=ipsum amet Lorem porttitor Kafka ultricies consectetuer, createdAt=2022-10-26T03:09:48))
2022-10-26 16:07:53 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4300278624535816450, userId=2083161302845408045, text=adipiscing libero sit lectus Kafka dolor porttitor, createdAt=2022-10-26T03:14:18))
2022-10-26 16:07:53 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4847010161200269605, userId=3504040542769952210, text=adipiscing Maecenas dolor adipiscing Kafka amet sit, createdAt=2022-10-26T03:29:48))
2022-10-26 16:07:54 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5318743730456287523, userId=2882459735468177448, text=Maecenas sed amet porttitor Kafka magna porttitor, createdAt=2022-10-26T04:10:49))
2022-10-26 16:07:54 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2719399190247328418, userId=7051817035842513376, text=magna dolor congue porttitor Kafka ultricies malesuada, createdAt=2022-10-26T04:14:49))
2022-10-26 16:07:55 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1206512431010370542, userId=7793285915818768721, text=purus massa sed sed Kafka libero Lorem, createdAt=2022-10-26T04:14:59))
2022-10-26 16:07:55 [parallel-16] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:07:56 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3631991675469553436, userId=4111881751072113321, text=lectus massa Lorem porttitor Kafka sed lectus, createdAt=2022-10-26T06:14:35))
2022-10-26 16:07:56 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7050905106827646656, userId=4543351751894061781, text=elit sit porttitor ipsum Kafka Lorem adipiscing, createdAt=2022-10-26T06:18:05))
2022-10-26 16:07:57 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2385988967511415712, userId=342402332706027136, text=Maecenas ipsum magna magna Kafka elit sed, createdAt=2022-10-26T06:43:15))
2022-10-26 16:07:57 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7089905449095293035, userId=681319992072588785, text=Maecenas consectetuer massa sed Kafka ultricies purus, createdAt=2022-10-26T06:12:25))
2022-10-26 16:07:58 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=909843376866692609, userId=5807143755034014936, text=massa malesuada ipsum Fusce Kafka congue sed porttitor, createdAt=2022-10-23T21:15:42))
2022-10-26 16:07:58 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6057526009134882126, userId=531724271837854692, text=porttitor magna posuere magna Kafka amet Maecenas ultricies, createdAt=2022-10-26T03:33:59))
2022-10-26 16:07:59 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7695596147537579690, userId=404317146122899584, text=consectetuer posuere consectetuer lectus Kafka dolor sit porttitor, createdAt=2022-10-26T03:40:29))
2022-10-26 16:07:59 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7810341762352299973, userId=6768077927414890905, text=dolor elit congue congue Kafka elit magna Fusce, createdAt=2022-10-26T06:57:55))
2022-10-26 16:08:00 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8405172985156754449, userId=5569926837339335028, text=Maecenas malesuada Maecenas sit Kafka massa elit Fusce, createdAt=2022-10-25T07:31:39))
2022-10-26 16:08:00 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4379214475973625665, userId=5599456193316243197, text=posuere porttitor dolor pulvinar Kafka posuere sit congue, createdAt=2022-10-26T02:49:18))
2022-10-26 16:08:01 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6500298861474230781, userId=6190423674701764119, text=sed ipsum ultricies consectetuer Kafka posuere pulvinar amet, createdAt=2022-10-26T02:52:08))
2022-10-26 16:08:01 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=171613605447546374, userId=9201888538870864686, text=posuere magna adipiscing porttitor Kafka posuere posuere Fusce, createdAt=2022-10-26T03:06:38))
2022-10-26 16:08:02 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7737197152292168961, userId=9086528289557557739, text=lectus Fusce purus porttitor Kafka Maecenas libero magna, createdAt=2022-10-26T03:49:59))
2022-10-26 16:08:02 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2066742113672320326, userId=220746149099204587, text=sit amet malesuada ipsum Kafka magna magna amet, createdAt=2022-10-26T03:50:49))
2022-10-26 16:08:03 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6295244993944879535, userId=7487494095772543108, text=amet purus adipiscing magna Kafka posuere purus ipsum, createdAt=2022-10-26T04:17:09))
2022-10-26 16:08:03 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7907949747885647811, userId=107834084810884258, text=malesuada lectus consectetuer Lorem Kafka ultricies porttitor adipiscing, createdAt=2022-10-26T04:27:29))
2022-10-26 16:08:04 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4880162170858465325, userId=888195422503694288, text=massa sed ultricies malesuada Kafka pulvinar posuere sit, createdAt=2022-10-26T06:06:25))
2022-10-26 16:08:04 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1281122739308384891, userId=5239050302680730691, text=posuere adipiscing lectus amet Kafka Maecenas malesuada sit, createdAt=2022-10-26T06:13:55))
2022-10-26 16:08:05 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1701109853358023579, userId=2088000380044734463, text=purus libero lectus Maecenas Kafka purus adipiscing lectus, createdAt=2022-10-26T06:53:05))
2022-10-26 16:08:05 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1761611021623942897, userId=2313431240710888559, text=congue ipsum lectus malesuada Kafka magna Maecenas Fusce, createdAt=2022-10-26T06:35:55))
2022-10-26 16:08:06 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3650279932791630482, userId=962832454167696832, text=dolor ultricies posuere elit Kafka elit libero libero, createdAt=2022-10-26T06:14:55))
2022-10-26 16:08:06 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4200840969510759183, userId=3921305913426034196, text=lectus consectetuer adipiscing porttitor Kafka purus adipiscing purus, createdAt=2022-10-26T06:36:35))
2022-10-26 16:08:07 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=152390997417663967, userId=7212707581068938885, text=elit purus porttitor congue Kafka lectus sit ultricies, createdAt=2022-10-26T06:53:25))
2022-10-26 16:08:07 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1857596008365356888, userId=2752241106948154809, text=lectus ipsum massa lectus ipsum Kafka elit pulvinar purus, createdAt=2022-10-23T21:22:12))
2022-10-26 16:08:07 [parallel-8] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:08:08 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7314072643006093119, userId=288360693849206823, text=dolor ultricies sed ipsum purus Kafka elit malesuada massa, createdAt=2022-10-23T21:21:52))
2022-10-26 16:08:08 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3509868423568364479, userId=6507203028479180536, text=adipiscing sed elit purus lectus Kafka lectus Fusce Lorem, createdAt=2022-10-26T02:19:35))
2022-10-26 16:08:09 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3728336320680797859, userId=398442895103574557, text=ipsum amet ultricies libero consectetuer Kafka purus libero posuere, createdAt=2022-10-26T02:41:48))
2022-10-26 16:08:09 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2316089578280827256, userId=6187103796553327180, text=porttitor sed purus massa porttitor Kafka dolor Maecenas elit, createdAt=2022-10-26T02:48:08))
2022-10-26 16:08:10 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6931420744271479865, userId=8758648398218009628, text=ultricies elit ipsum libero sed Kafka libero libero malesuada, createdAt=2022-10-26T02:55:58))
2022-10-26 16:08:10 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6566811776677726562, userId=6325430537357516145, text=sit purus porttitor elit lectus Kafka porttitor Lorem ultricies, createdAt=2022-10-26T03:05:08))
2022-10-26 16:08:11 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1963146139122112744, userId=6610916137562943019, text=massa sit ultricies sed libero Kafka posuere congue adipiscing, createdAt=2022-10-26T03:09:08))
2022-10-26 16:08:11 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4710405937307072116, userId=6801481740684479642, text=posuere malesuada sed ultricies purus Kafka lectus consectetuer ipsum, createdAt=2022-10-26T03:20:18))
2022-10-26 16:08:12 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5099808314246554968, userId=5751800876091964467, text=malesuada sit porttitor massa lectus Kafka purus sed congue, createdAt=2022-10-26T03:40:19))
2022-10-26 16:08:12 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5711561469629989740, userId=7040374887843635015, text=purus pulvinar posuere Lorem sit Kafka Fusce magna pulvinar, createdAt=2022-10-26T03:54:19))
2022-10-26 16:08:13 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1603709184834377838, userId=7144773618505476197, text=Lorem consectetuer sed Fusce purus Kafka libero pulvinar Fusce, createdAt=2022-10-26T04:01:59))
2022-10-26 16:08:13 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=869276357953983805, userId=8461055714522924242, text=magna sed ipsum ipsum ipsum Kafka elit Lorem lectus, createdAt=2022-10-26T04:10:39))
2022-10-26 16:08:14 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3145639730830110816, userId=591354011632380610, text=magna sed ipsum Maecenas posuere Kafka sed purus pulvinar, createdAt=2022-10-26T04:25:09))
2022-10-26 16:08:15 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3883367992811979583, userId=8513581017026117489, text=magna elit dolor ultricies congue Kafka congue porttitor massa, createdAt=2022-10-26T06:54:35))
2022-10-26 16:08:15 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=489320920033423064, userId=9175257415707277586, text=Maecenas dolor adipiscing libero purus Kafka massa congue posuere, createdAt=2022-10-23T20:58:34))
2022-10-26 16:08:16 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6983936553981983143, userId=6833051420245907555, text=sed posuere malesuada sit sed Kafka pulvinar lectus lectus, createdAt=2022-10-23T14:06:49))
2022-10-26 16:08:16 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7745494448207217834, userId=3802980377838985114, text=sed ipsum massa ipsum posuere Kafka dolor sit congue, createdAt=2022-10-26T02:19:45))
2022-10-26 16:08:17 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5352764885229544857, userId=700171818653232526, text=elit magna libero adipiscing massa Kafka consectetuer congue elit, createdAt=2022-10-26T02:22:55))
2022-10-26 16:08:17 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3883372365072746642, userId=1308843225975920120, text=amet ipsum ultricies dolor amet Kafka dolor Fusce sed, createdAt=2022-10-26T02:43:38))
2022-10-26 16:08:18 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2916387143590780031, userId=4442224716717989666, text=sed Lorem elit magna pulvinar Kafka amet congue libero, createdAt=2022-10-26T03:07:28))
2022-10-26 16:08:18 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4385367800106700570, userId=5613799736275342243, text=lectus elit ultricies Maecenas ultricies Kafka Maecenas purus ultricies, createdAt=2022-10-26T03:09:58))
2022-10-26 16:08:19 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=764683350370793268, userId=964146514971952775, text=sit dolor Lorem sit ultricies Kafka sit elit lectus, createdAt=2022-10-26T03:29:08))
2022-10-26 16:08:19 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8950456343830394091, userId=1495146434065477785, text=amet ultricies sed sit adipiscing Kafka congue congue lectus, createdAt=2022-10-26T03:46:49))
2022-10-26 16:08:20 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2551883079275024959, userId=8175159492879196157, text=pulvinar malesuada adipiscing magna adipiscing Kafka ipsum sed purus, createdAt=2022-10-26T04:03:49))
2022-10-26 16:08:20 [parallel-16] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:08:20 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2790929908224663790, userId=7173936457815992213, text=amet Maecenas malesuada posuere magna Kafka ultricies consectetuer ipsum, createdAt=2022-10-26T04:11:59))
2022-10-26 16:08:21 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1597964264882051180, userId=4889908118011725771, text=posuere sed magna dolor libero Kafka purus consectetuer adipiscing, createdAt=2022-10-26T06:29:25))
2022-10-26 16:08:21 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=747896722469613494, userId=277917904094233941, text=pulvinar pulvinar malesuada malesuada sed Kafka lectus sit pulvinar, createdAt=2022-10-26T06:44:55))
2022-10-26 16:08:22 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7805586808241473741, userId=2597599935933881151, text=Fusce porttitor posuere sed dolor Kafka lectus consectetuer Maecenas, createdAt=2022-10-26T06:38:45))
2022-10-26 16:08:22 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1700686737664195483, userId=5534021138665789978, text=libero elit sed amet dolor Kafka dolor lectus consectetuer, createdAt=2022-10-26T06:17:45))
2022-10-26 16:08:23 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=575886218702789830, userId=2386863326565797523, text=posuere congue consectetuer Maecenas massa Kafka Lorem purus porttitor, createdAt=2022-10-26T06:06:05))
2022-10-26 16:08:23 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5766226334882756487, userId=3431742849141393122, text=posuere Lorem pulvinar libero ultricies Kafka libero adipiscing magna, createdAt=2022-10-26T06:47:55))
2022-10-26 16:08:24 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6041341604670185625, userId=884758640157156696, text=massa porttitor pulvinar sed sed Kafka consectetuer Maecenas purus Lorem, createdAt=2022-10-23T21:18:22))
2022-10-26 16:08:24 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=88201757599157479, userId=4919030610316932539, text=elit purus libero lectus porttitor Kafka amet sed massa malesuada, createdAt=2022-10-26T02:10:05))
2022-10-26 16:08:25 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=608126353084917599, userId=186344593854428189, text=sit pulvinar lectus elit Maecenas Kafka pulvinar porttitor Maecenas ultricies, createdAt=2022-10-26T02:41:58))
2022-10-26 16:08:25 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3635026811351964917, userId=5905228658941068865, text=porttitor pulvinar ipsum elit pulvinar Kafka ultricies massa consectetuer consectetuer, createdAt=2022-10-26T02:53:48))
2022-10-26 16:08:26 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5300510699460217010, userId=7265357202012827469, text=libero sed ipsum sit magna Kafka porttitor Lorem lectus posuere, createdAt=2022-10-26T02:53:28))
2022-10-26 16:08:26 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2192046486019512853, userId=8418393175566824223, text=consectetuer Maecenas ipsum consectetuer amet Kafka elit Maecenas sed Lorem, createdAt=2022-10-26T02:56:18))
2022-10-26 16:08:27 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=310964016913620149, userId=2071756747098526476, text=Lorem porttitor sed ultricies sed Kafka posuere lectus congue consectetuer, createdAt=2022-10-26T02:59:18))
2022-10-26 16:08:27 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6848146503839047815, userId=7555726481281107669, text=pulvinar Maecenas magna sed magna Kafka posuere congue sit malesuada, createdAt=2022-10-26T03:01:48))
2022-10-26 16:08:28 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5849258196868694882, userId=255849657335951311, text=posuere ultricies posuere posuere elit Kafka massa massa pulvinar pulvinar, createdAt=2022-10-26T03:45:29))
2022-10-26 16:08:28 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6014483457861774780, userId=3360861150794334692, text=ipsum magna Lorem ipsum dolor Kafka libero Lorem congue sed, createdAt=2022-10-26T03:46:39))
2022-10-26 16:08:29 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8391819352929291243, userId=9186730383435011856, text=libero dolor amet ipsum elit Kafka porttitor congue posuere massa, createdAt=2022-10-26T04:01:29))
2022-10-26 16:08:29 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6118405634949655883, userId=6098732720469476834, text=Lorem ipsum elit libero amet Kafka lectus pulvinar ultricies libero, createdAt=2022-10-26T04:02:49))
2022-10-26 16:08:30 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3539928006201405421, userId=4053982138809110982, text=sed lectus posuere consectetuer purus Kafka Fusce sed porttitor amet, createdAt=2022-10-26T04:07:29))
2022-10-26 16:08:30 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7904353099968820155, userId=5969007428297564545, text=lectus magna massa adipiscing congue Kafka elit Fusce consectetuer ultricies, createdAt=2022-10-26T04:12:59))
2022-10-26 16:08:31 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5548930281741134718, userId=9092148434151284631, text=amet dolor Maecenas posuere lectus Kafka adipiscing pulvinar purus pulvinar, createdAt=2022-10-26T06:59:45))
2022-10-26 16:08:31 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4479793517091005930, userId=9092113608825761072, text=magna Lorem lectus ipsum malesuada Kafka elit ipsum amet elit, createdAt=2022-10-26T03:03:48))
2022-10-26 16:08:32 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2831656979316611882, userId=1100699547061924360, text=pulvinar ultricies sit purus lectus Kafka libero consectetuer adipiscing adipiscing, createdAt=2022-10-26T03:09:18))
2022-10-26 16:08:32 [parallel-8] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:08:33 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2458655203889186535, userId=6184772330447039050, text=amet Lorem Maecenas porttitor sed Kafka sit ipsum ipsum Fusce, createdAt=2022-10-26T03:24:08))
2022-10-26 16:08:33 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8708053277051861642, userId=697915103758198075, text=sit sit magna Fusce libero Kafka consectetuer Lorem posuere libero, createdAt=2022-10-26T03:42:09))
2022-10-26 16:08:34 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2696734913430344487, userId=3052909369066380411, text=lectus adipiscing ipsum magna consectetuer Kafka sed amet dolor sit, createdAt=2022-10-26T03:58:59))
2022-10-26 16:08:34 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8348389912095647966, userId=3172407532482796818, text=sit sed consectetuer ultricies sit Kafka elit ultricies elit porttitor, createdAt=2022-10-26T04:08:29))
2022-10-26 16:08:35 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2736646938140867980, userId=1301453798172652829, text=libero amet massa dolor massa Kafka dolor sit ultricies dolor, createdAt=2022-10-26T04:23:29))
2022-10-26 16:08:35 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3474120828586767330, userId=4387064532226875386, text=dolor purus Maecenas massa magna Kafka Maecenas Maecenas adipiscing elit, createdAt=2022-10-26T06:09:35))
2022-10-26 16:08:36 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6910659212274705608, userId=488408154726415076, text=Maecenas adipiscing Maecenas magna ultricies Kafka lectus sed sit lectus, createdAt=2022-10-26T06:22:15))
2022-10-26 16:08:36 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7818914237130685999, userId=21188793661314126, text=ipsum libero sed Lorem purus Kafka purus posuere consectetuer purus, createdAt=2022-10-26T06:15:15))
2022-10-26 16:08:37 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5775546268087490438, userId=8819209000243370131, text=purus massa Fusce Fusce malesuada Kafka ultricies purus congue Maecenas, createdAt=2022-10-26T06:47:35))
2022-10-26 16:08:37 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5747294453764793684, userId=4221163370730320354, text=sed porttitor Maecenas sed lectus Kafka lectus libero sit consectetuer, createdAt=2022-10-26T06:48:05))
2022-10-26 16:08:38 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7049747766389216246, userId=5552272346340081616, text=dolor sed dolor Fusce lectus sed Kafka purus adipiscing posuere pulvinar, createdAt=2022-10-23T20:58:24))
2022-10-26 16:08:38 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1494042316126728178, userId=2610435722191431141, text=libero libero sed sed porttitor porttitor Kafka congue sit Lorem pulvinar, createdAt=2022-10-23T21:16:02))
2022-10-26 16:08:39 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7657198227934536748, userId=4965122038447285476, text=consectetuer ultricies purus purus elit ultricies Kafka consectetuer lectus malesuada malesuada, createdAt=2022-10-26T03:13:08))
2022-10-26 16:08:39 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=9063296576199706446, userId=328306975798430715, text=amet massa posuere ultricies amet purus Kafka amet lectus ultricies lectus, createdAt=2022-10-26T03:16:08))
2022-10-26 16:08:40 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7907614586695396022, userId=5991698915306512706, text=dolor magna magna massa Maecenas ultricies Kafka purus purus massa massa, createdAt=2022-10-26T03:20:08))
2022-10-26 16:08:40 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5297243035838068559, userId=6131072199107075213, text=libero consectetuer sed porttitor dolor libero Kafka pulvinar ultricies Maecenas purus, createdAt=2022-10-26T03:24:18))
2022-10-26 16:08:41 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6122335815926338222, userId=2453245496560475632, text=malesuada porttitor congue posuere adipiscing posuere Kafka adipiscing posuere dolor malesuada, createdAt=2022-10-26T03:42:59))
2022-10-26 16:08:41 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2313100118316778055, userId=1159483342022340530, text=Fusce malesuada consectetuer sed magna libero Kafka Maecenas pulvinar ipsum adipiscing, createdAt=2022-10-26T04:19:29))
2022-10-26 16:08:42 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2467395007862174991, userId=4461860619002027963, text=porttitor libero porttitor Lorem porttitor Fusce Kafka porttitor consectetuer Fusce adipiscing, createdAt=2022-10-26T04:18:29))
2022-10-26 16:08:42 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6499854523555967324, userId=2507455125349832070, text=pulvinar ultricies sed pulvinar Maecenas purus Kafka consectetuer sed consectetuer Fusce, createdAt=2022-10-26T07:00:05))
2022-10-26 16:08:43 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4604368897735161372, userId=5862125164037919231, text=ipsum sit elit malesuada consectetuer malesuada Kafka Fusce dolor ultricies Fusce, createdAt=2022-10-23T21:17:42))
2022-10-26 16:08:43 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4186546698826775801, userId=9121179330079218425, text=Fusce malesuada ultricies congue lectus posuere Kafka congue sed Lorem lectus, createdAt=2022-10-23T13:29:42))
2022-10-26 16:08:44 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7011051656800929326, userId=2841249519360845012, text=elit porttitor porttitor malesuada purus consectetuer Kafka libero sed elit magna, createdAt=2022-10-26T02:06:05))
2022-10-26 16:08:44 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7123411801220393531, userId=9038970276100550495, text=pulvinar sed malesuada adipiscing Maecenas congue Kafka dolor libero purus purus, createdAt=2022-10-26T02:16:55))
2022-10-26 16:08:44 [parallel-16] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:08:45 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6428664656953761867, userId=8931138262280175625, text=amet Lorem Fusce Lorem amet massa Kafka pulvinar adipiscing massa porttitor, createdAt=2022-10-26T02:20:45))
2022-10-26 16:08:45 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5138130916353679865, userId=2595734646224478921, text=porttitor porttitor Lorem elit ipsum Fusce Kafka pulvinar sit elit consectetuer, createdAt=2022-10-26T02:54:48))
2022-10-26 16:08:46 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4664758673789982871, userId=2115892718112487192, text=Maecenas adipiscing sed Lorem sed amet Kafka ultricies lectus lectus sed, createdAt=2022-10-26T02:55:08))
2022-10-26 16:08:46 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7699927160421536638, userId=7316583793568955875, text=Fusce malesuada magna adipiscing elit malesuada Kafka purus porttitor magna massa, createdAt=2022-10-26T03:01:18))
2022-10-26 16:08:47 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6524998698021376135, userId=1171769264747879353, text=lectus pulvinar libero Lorem congue Lorem Kafka amet ipsum malesuada Fusce, createdAt=2022-10-26T03:01:08))
2022-10-26 16:08:47 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1466693244388606557, userId=9089509903922454377, text=malesuada consectetuer libero amet sed pulvinar Kafka dolor ultricies sit ipsum, createdAt=2022-10-26T03:03:28))
2022-10-26 16:08:48 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1421498383090814873, userId=6626738741145903906, text=elit ipsum pulvinar magna sit elit Kafka adipiscing posuere libero Maecenas, createdAt=2022-10-26T03:31:59))
2022-10-26 16:08:48 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5234360746355936920, userId=2589349320593728887, text=sed adipiscing magna lectus lectus adipiscing Kafka porttitor sed consectetuer Lorem, createdAt=2022-10-26T03:43:49))
2022-10-26 16:08:49 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5622912148183011718, userId=9217565730177813563, text=lectus sed malesuada libero dolor purus Kafka Maecenas ipsum consectetuer ipsum, createdAt=2022-10-26T04:22:49))
2022-10-26 16:08:49 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4860053668352141519, userId=7806217841840272843, text=Fusce consectetuer sed elit sed purus Kafka libero elit malesuada ipsum, createdAt=2022-10-26T06:19:15))
2022-10-26 16:08:50 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1458677205432230256, userId=4426229283951009975, text=congue sed Fusce ipsum amet congue Kafka adipiscing congue massa amet, createdAt=2022-10-26T06:20:55))
2022-10-26 16:08:50 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=68975222834252819, userId=4130670945714595365, text=massa Lorem dolor Fusce sit adipiscing Kafka lectus lectus dolor malesuada, createdAt=2022-10-26T06:42:25))
2022-10-26 16:08:51 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2592018037587860493, userId=188333620189183884, text=ipsum ultricies sed Lorem ultricies congue Kafka malesuada elit elit Fusce, createdAt=2022-10-26T06:05:55))
2022-10-26 16:08:51 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5251078505612796494, userId=4444906305659841780, text=amet posuere libero porttitor massa lectus Kafka adipiscing sit Fusce posuere, createdAt=2022-10-26T06:31:05))
2022-10-26 16:08:52 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6771415631042214137, userId=5865552851179612120, text=lectus malesuada sit consectetuer malesuada malesuada Kafka Lorem porttitor dolor posuere, createdAt=2022-10-26T06:35:45))
2022-10-26 16:08:53 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4287696860659843315, userId=7755425118152658132, text=consectetuer adipiscing pulvinar posuere Maecenas consectetuer Kafka lectus posuere libero sit, createdAt=2022-10-26T06:44:25))
2022-10-26 16:08:53 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6577841281741290380, userId=2395290255545375961, text=ultricies porttitor posuere porttitor porttitor posuere Kafka sit ultricies posuere ipsum, createdAt=2022-10-26T06:49:55))
2022-10-26 16:08:54 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7897091713188674940, userId=7302702996508028877, text=pulvinar ultricies pulvinar ipsum Lorem elit Kafka ipsum elit Lorem pulvinar purus, createdAt=2022-10-26T02:06:45))
2022-10-26 16:08:54 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8355745426715855735, userId=8146647775664805689, text=purus Maecenas consectetuer purus ultricies amet Kafka magna ipsum porttitor consectetuer sit, createdAt=2022-10-26T02:08:45))
2022-10-26 16:08:55 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8515553214624452381, userId=8101464832924494570, text=lectus massa Lorem adipiscing posuere Lorem Kafka ipsum consectetuer sed consectetuer Lorem, createdAt=2022-10-26T02:10:35))
2022-10-26 16:08:55 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5530835356295636899, userId=6420870794185402231, text=sit ipsum Fusce pulvinar malesuada Maecenas Kafka dolor ultricies ipsum Maecenas congue, createdAt=2022-10-26T02:12:45))
2022-10-26 16:08:56 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1398035316754758638, userId=4029212081040840259, text=sit Lorem massa lectus adipiscing posuere Kafka sed malesuada dolor sed Fusce, createdAt=2022-10-26T02:19:25))
2022-10-26 16:08:56 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4826430770977063344, userId=4450291193545661836, text=ipsum lectus sit elit sit Lorem Kafka sit magna sed lectus purus, createdAt=2022-10-26T02:47:18))
2022-10-26 16:08:57 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=746116917283660820, userId=110844090632216280, text=malesuada malesuada lectus malesuada adipiscing consectetuer Kafka Lorem malesuada congue purus posuere, createdAt=2022-10-26T03:10:48))
2022-10-26 16:08:57 [parallel-8] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:08:57 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2189077237150461185, userId=1252059538612114755, text=massa sit Maecenas malesuada lectus pulvinar Kafka amet libero adipiscing congue consectetuer, createdAt=2022-10-26T03:20:58))
2022-10-26 16:08:58 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6553546195095766592, userId=9183693070092340670, text=malesuada massa pulvinar massa posuere Maecenas Kafka magna Lorem dolor posuere magna, createdAt=2022-10-26T03:57:59))
2022-10-26 16:08:58 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=314795565741828260, userId=4603337648573511525, text=magna purus sed amet ultricies dolor Kafka libero adipiscing dolor Fusce congue, createdAt=2022-10-26T04:06:39))
2022-10-26 16:08:59 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6766582984705467436, userId=8963814956511734462, text=ultricies consectetuer elit posuere ultricies elit Kafka posuere purus amet libero adipiscing, createdAt=2022-10-26T04:18:19))
2022-10-26 16:08:59 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4367786877884707119, userId=4860622403956432182, text=porttitor dolor Fusce elit libero Maecenas Kafka posuere Fusce sed libero massa, createdAt=2022-10-26T04:19:39))
2022-10-26 16:09:00 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4725539605298708900, userId=7039365399902788178, text=posuere amet malesuada posuere consectetuer elit Kafka massa malesuada ultricies dolor congue, createdAt=2022-10-26T04:22:39))
2022-10-26 16:09:00 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8750023676161578285, userId=3894675235566180070, text=massa Fusce Maecenas pulvinar purus sed Kafka pulvinar libero sit magna Maecenas, createdAt=2022-10-26T06:58:45))
2022-10-26 16:09:01 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8115908843839990540, userId=4506572905138935091, text=adipiscing Maecenas Fusce libero sit sed Kafka magna congue ipsum Maecenas ipsum, createdAt=2022-10-23T21:13:27))
2022-10-26 16:09:01 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=594671109341832720, userId=1448031650288122062, text=elit sit magna Fusce libero Lorem Kafka magna porttitor purus pulvinar Fusce, createdAt=2022-10-25T07:31:19))
2022-10-26 16:09:02 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7639055348033863529, userId=4483955600574060681, text=purus sed porttitor Fusce congue Lorem Kafka massa magna Lorem Maecenas massa, createdAt=2022-10-26T02:14:25))
2022-10-26 16:09:02 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5842484355468378842, userId=2765166603913598323, text=Fusce consectetuer lectus sit sed dolor Kafka congue lectus massa posuere malesuada, createdAt=2022-10-26T02:54:58))
2022-10-26 16:09:03 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3228509130158392324, userId=6398747517029727938, text=Maecenas consectetuer sed sit posuere magna Kafka posuere dolor amet purus Lorem, createdAt=2022-10-26T03:41:29))
2022-10-26 16:09:03 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8768156111923308359, userId=3472779932834730747, text=congue elit congue amet Lorem dolor Kafka sed congue amet purus ipsum, createdAt=2022-10-26T04:04:39))
2022-10-26 16:09:04 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2442843897231658707, userId=7539609871540049272, text=libero malesuada Maecenas magna congue elit Kafka purus Fusce congue massa Lorem, createdAt=2022-10-26T04:08:59))
2022-10-26 16:09:04 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5425412323233700598, userId=4098456493682894047, text=adipiscing sit dolor lectus lectus consectetuer Kafka posuere libero amet purus malesuada, createdAt=2022-10-26T04:12:09))
2022-10-26 16:09:05 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8644334239745356283, userId=4359310085450063674, text=Fusce consectetuer amet elit sit massa Kafka pulvinar Maecenas Maecenas pulvinar Fusce, createdAt=2022-10-26T06:16:35))
2022-10-26 16:09:05 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6403711156463940021, userId=9165714723420365253, text=amet pulvinar Lorem ultricies massa Maecenas Kafka amet adipiscing libero Maecenas congue, createdAt=2022-10-26T06:09:25))
2022-10-26 16:09:06 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5853425690382992985, userId=7290244124091536670, text=purus purus congue Fusce lectus libero Kafka malesuada sed consectetuer consectetuer adipiscing, createdAt=2022-10-26T06:14:25))
2022-10-26 16:09:06 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8217714134296314307, userId=178161233877679713, text=adipiscing consectetuer consectetuer magna malesuada lectus Kafka sit posuere pulvinar pulvinar lectus, createdAt=2022-10-26T06:54:25))
2022-10-26 16:09:07 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=855152768510581556, userId=6554822457423629040, text=libero ultricies dolor magna posuere malesuada massa Kafka ipsum lectus posuere purus Maecenas, createdAt=2022-10-23T21:23:32))
2022-10-26 16:09:07 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3306674990427209925, userId=1098606843601608083, text=consectetuer elit sed consectetuer ipsum adipiscing lectus Kafka posuere Lorem purus Lorem congue, createdAt=2022-10-23T21:14:42))
2022-10-26 16:09:08 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6491367363025880534, userId=3541729967733061065, text=magna ultricies lectus ipsum massa magna libero Kafka sit Lorem elit amet pulvinar, createdAt=2022-10-23T21:18:02))
2022-10-26 16:09:08 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7895525534618966849, userId=1376969836423787628, text=sit elit Lorem libero pulvinar posuere purus Kafka lectus ipsum pulvinar purus congue, createdAt=2022-10-26T02:08:05))
2022-10-26 16:09:09 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2218929150563075814, userId=7888068062543354081, text=ultricies libero purus adipiscing porttitor consectetuer malesuada Kafka elit sed Lorem amet elit, createdAt=2022-10-26T02:19:05))
2022-10-26 16:09:09 [parallel-16] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:09:09 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5227932758050768460, userId=1165447794833734574, text=massa dolor adipiscing ultricies purus adipiscing lectus Kafka sit dolor posuere porttitor posuere, createdAt=2022-10-26T02:47:08))
2022-10-26 16:09:10 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2052226815050612555, userId=4334801246178573956, text=magna Lorem ipsum pulvinar sit posuere Fusce Kafka elit lectus ipsum massa consectetuer, createdAt=2022-10-26T03:17:58))
2022-10-26 16:09:10 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7899174880164479562, userId=5899862038174687252, text=congue pulvinar pulvinar magna congue dolor Maecenas Kafka pulvinar sit ipsum magna ultricies, createdAt=2022-10-26T03:18:08))
2022-10-26 16:09:11 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2774775706862974885, userId=446661784925882879, text=posuere sed ipsum magna Fusce libero Fusce Kafka ultricies adipiscing congue elit posuere, createdAt=2022-10-26T04:01:09))
2022-10-26 16:09:12 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8758898867713730316, userId=3053194898301463099, text=posuere ipsum posuere massa congue Maecenas dolor Kafka ultricies Fusce lectus dolor consectetuer, createdAt=2022-10-26T06:55:05))
2022-10-26 16:09:12 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1790891031661394417, userId=7388839201598983103, text=lectus Fusce congue dolor amet sit malesuada Kafka sit pulvinar porttitor purus congue, createdAt=2022-10-23T21:18:12))
2022-10-26 16:09:13 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6569899359898146449, userId=1873881946183331639, text=malesuada Fusce amet consectetuer elit pulvinar Fusce Kafka purus ipsum adipiscing elit porttitor, createdAt=2022-10-23T21:19:12))
2022-10-26 16:09:13 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5930287782108546395, userId=335440479064720282, text=posuere dolor magna massa Fusce posuere consectetuer Kafka amet libero dolor congue posuere, createdAt=2022-10-25T07:31:29))
2022-10-26 16:09:14 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2124210682519036909, userId=5140853253286132110, text=massa lectus ipsum malesuada consectetuer dolor libero Kafka malesuada consectetuer posuere consectetuer consectetuer, createdAt=2022-10-26T02:14:55))
2022-10-26 16:09:14 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=607555552459806661, userId=8772919146664319873, text=sed elit amet dolor massa dolor magna Kafka massa adipiscing lectus magna consectetuer, createdAt=2022-10-26T02:18:05))
2022-10-26 16:09:15 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1888346578375010979, userId=4916445989213423468, text=amet congue consectetuer malesuada sit dolor purus Kafka amet congue sit sed adipiscing, createdAt=2022-10-26T03:19:08))
2022-10-26 16:09:15 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3410333512413047363, userId=5293295787992062533, text=magna malesuada magna adipiscing posuere ipsum pulvinar Kafka congue amet ultricies ipsum sed, createdAt=2022-10-26T03:23:48))
2022-10-26 16:09:16 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2192580467029201796, userId=8562293212788860536, text=adipiscing amet dolor congue sed libero posuere Kafka pulvinar ultricies consectetuer sit malesuada, createdAt=2022-10-26T03:47:39))
2022-10-26 16:09:16 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3221975347883556803, userId=1014142263351334899, text=congue lectus elit malesuada porttitor Lorem porttitor Kafka dolor Lorem ultricies porttitor malesuada, createdAt=2022-10-26T03:56:09))
2022-10-26 16:09:17 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2905341098825534565, userId=8644662229878434057, text=magna adipiscing Lorem adipiscing consectetuer sit elit Kafka massa sed consectetuer lectus libero, createdAt=2022-10-26T03:59:49))
2022-10-26 16:09:17 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8368526087733163769, userId=4346051403597136950, text=lectus Maecenas amet malesuada Lorem pulvinar consectetuer Kafka consectetuer ipsum adipiscing libero adipiscing, createdAt=2022-10-26T04:04:49))
2022-10-26 16:09:18 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3866844379941940623, userId=413206663217505775, text=porttitor ultricies libero pulvinar ultricies adipiscing ipsum Kafka sed elit pulvinar adipiscing ipsum, createdAt=2022-10-26T06:19:45))
2022-10-26 16:09:18 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3593186487702454400, userId=4203129120235801983, text=porttitor Maecenas libero Fusce sit massa libero Kafka amet Fusce Lorem dolor massa, createdAt=2022-10-26T06:16:55))
2022-10-26 16:09:19 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=703314460611671623, userId=1504512524202736904, text=lectus dolor Lorem Fusce porttitor consectetuer sit Kafka purus ultricies amet sit libero, createdAt=2022-10-26T06:26:55))
2022-10-26 16:09:19 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7232522344778260766, userId=7042571113421125866, text=pulvinar Fusce sed sed sed libero massa Kafka purus dolor libero ultricies pulvinar, createdAt=2022-10-26T06:43:05))
2022-10-26 16:09:20 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7925629869207939210, userId=611338077735146675, text=malesuada pulvinar congue magna pulvinar sit Lorem Kafka elit posuere lectus consectetuer libero, createdAt=2022-10-26T06:25:05))
2022-10-26 16:09:20 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2878716453133721292, userId=6976808416838527355, text=sit ipsum consectetuer magna amet massa congue Kafka sit ipsum Lorem magna dolor, createdAt=2022-10-26T06:39:25))
2022-10-26 16:09:21 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6383393925256184260, userId=5974068157380928699, text=congue lectus congue Maecenas libero libero amet Kafka consectetuer magna Maecenas Lorem Lorem, createdAt=2022-10-26T06:07:45))
2022-10-26 16:09:21 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5205959090141826554, userId=2406737348714473113, text=dolor amet ultricies Maecenas congue purus congue Kafka libero porttitor dolor ultricies dolor, createdAt=2022-10-26T06:23:05))
2022-10-26 16:09:21 [parallel-8] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:09:22 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8572867558989938780, userId=1411991683718919477, text=Lorem lectus posuere sit amet massa elit Kafka posuere ultricies lectus adipiscing consectetuer, createdAt=2022-10-26T06:47:45))
2022-10-26 16:09:22 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1931428055905752847, userId=8514785040077388298, text=ultricies massa Lorem Lorem purus consectetuer elit Kafka malesuada pulvinar elit malesuada amet purus, createdAt=2022-10-23T21:23:02))
2022-10-26 16:09:23 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1734618394560299256, userId=5762810939898117331, text=congue malesuada libero magna ultricies adipiscing posuere Kafka massa lectus porttitor ipsum dolor pulvinar, createdAt=2022-10-23T21:12:26))
2022-10-26 16:09:23 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7798371295604189306, userId=3178040326464985298, text=congue adipiscing massa malesuada massa massa purus Kafka amet libero ipsum sed Lorem ipsum, createdAt=2022-10-26T03:27:18))
2022-10-26 16:09:24 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3630858667553515154, userId=3528620138657750542, text=sed amet consectetuer magna congue pulvinar consectetuer Kafka elit massa ipsum elit porttitor purus, createdAt=2022-10-26T03:30:28))
2022-10-26 16:09:24 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3937698854531515828, userId=864016541101456176, text=magna massa malesuada libero libero massa purus Kafka Fusce pulvinar malesuada Lorem Fusce magna, createdAt=2022-10-26T03:33:39))
2022-10-26 16:09:25 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=270030841167551354, userId=718200977870409410, text=congue posuere lectus pulvinar ultricies libero Lorem Kafka porttitor massa congue sit Lorem amet, createdAt=2022-10-26T03:43:39))
2022-10-26 16:09:25 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3815258310510250084, userId=4881957416576630670, text=ultricies purus sit porttitor amet congue magna Kafka ipsum adipiscing libero magna Maecenas congue, createdAt=2022-10-26T03:46:19))
2022-10-26 16:09:26 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3550725314689231745, userId=9081307517028452062, text=massa lectus ultricies libero lectus pulvinar massa Kafka ultricies congue Maecenas Fusce massa ipsum, createdAt=2022-10-26T03:51:29))
2022-10-26 16:09:26 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7974073626899412692, userId=9218552164921975105, text=pulvinar malesuada Maecenas porttitor dolor congue massa Kafka Lorem purus congue consectetuer magna sit, createdAt=2022-10-26T04:09:59))
2022-10-26 16:09:27 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1814275167476053416, userId=7444223881168626086, text=sit amet porttitor magna sit ultricies libero Kafka elit sed pulvinar Fusce congue lectus, createdAt=2022-10-26T04:15:39))
2022-10-26 16:09:27 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7705027692649537080, userId=1674324173426876195, text=pulvinar Lorem sit Maecenas consectetuer lectus Maecenas Kafka lectus posuere pulvinar lectus adipiscing sit, createdAt=2022-10-26T04:19:19))
2022-10-26 16:09:28 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4978960994232652984, userId=7245524999018666261, text=Fusce massa pulvinar ultricies amet congue Lorem Kafka Maecenas congue purus amet sit purus, createdAt=2022-10-23T21:29:12))
2022-10-26 16:09:28 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6373263878081566940, userId=7931260308119469416, text=purus consectetuer purus congue elit malesuada pulvinar Kafka pulvinar magna porttitor posuere Lorem massa, createdAt=2022-10-26T02:14:35))
2022-10-26 16:09:29 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7767276393032208689, userId=3181519260866783368, text=consectetuer ipsum Maecenas posuere sed Fusce Lorem Kafka purus Lorem congue lectus magna sit, createdAt=2022-10-26T02:16:45))
2022-10-26 16:09:29 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5925785358587778678, userId=7690826866459250733, text=posuere malesuada malesuada porttitor posuere Lorem ultricies Kafka elit ultricies purus ipsum Fusce magna, createdAt=2022-10-26T02:40:18))
2022-10-26 16:09:30 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4409149441100243866, userId=6579291158007139468, text=posuere Maecenas consectetuer libero Maecenas magna Maecenas Kafka libero libero elit ipsum malesuada adipiscing, createdAt=2022-10-26T02:45:18))
2022-10-26 16:09:30 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4496544072713071074, userId=6135754622597423631, text=Fusce Maecenas adipiscing pulvinar porttitor elit Lorem Kafka massa malesuada dolor porttitor Fusce Fusce, createdAt=2022-10-26T03:19:38))
2022-10-26 16:09:31 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6697970701334713189, userId=8651913356221599700, text=massa magna lectus congue sit purus sed Kafka congue malesuada ipsum pulvinar dolor dolor, createdAt=2022-10-26T03:23:08))
2022-10-26 16:09:31 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3446519433153513809, userId=1346151039193297206, text=congue ultricies Lorem congue sed ultricies libero Kafka Maecenas posuere Lorem libero posuere adipiscing, createdAt=2022-10-26T03:26:58))
2022-10-26 16:09:32 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5904259944792177148, userId=5915461408756494729, text=lectus Fusce ipsum Maecenas ultricies Fusce lectus Kafka Maecenas ipsum porttitor Maecenas adipiscing sit, createdAt=2022-10-26T03:29:58))
2022-10-26 16:09:33 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=615522199074570598, userId=2293804085954289947, text=Lorem porttitor malesuada sit congue sed consectetuer Kafka purus magna massa lectus Maecenas congue, createdAt=2022-10-26T03:53:19))
2022-10-26 16:09:33 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8449619992016651677, userId=8462057929636593105, text=purus libero purus malesuada consectetuer adipiscing porttitor Kafka amet posuere amet elit adipiscing Lorem, createdAt=2022-10-26T04:13:49))
2022-10-26 16:09:34 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5658073252533956076, userId=2914004651643107945, text=lectus pulvinar amet sit dolor magna Fusce Kafka sed magna adipiscing pulvinar elit Maecenas, createdAt=2022-10-26T04:26:09))
2022-10-26 16:09:34 [parallel-16] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:09:34 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2489257848015340037, userId=2878177122607663155, text=magna consectetuer massa magna libero massa sed Kafka malesuada Fusce consectetuer amet amet pulvinar, createdAt=2022-10-26T06:38:35))
2022-10-26 16:09:35 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1789919369438134652, userId=1751456661777991455, text=pulvinar adipiscing Maecenas malesuada congue ultricies dolor Kafka Lorem sit sed posuere magna porttitor, createdAt=2022-10-26T06:13:35))
2022-10-26 16:09:35 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8996611725332712671, userId=8150521445901936969, text=pulvinar dolor magna ultricies sed purus porttitor Kafka massa libero sed sit purus sit, createdAt=2022-10-26T06:23:55))
2022-10-26 16:09:36 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2544301736305018408, userId=644400559357722751, text=magna amet Maecenas pulvinar pulvinar libero sit Kafka amet magna dolor elit elit magna, createdAt=2022-10-26T06:36:05))
2022-10-26 16:09:36 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3488182702287754259, userId=3361306602822391377, text=elit malesuada Lorem malesuada lectus sed massa Kafka Maecenas dolor consectetuer dolor posuere porttitor, createdAt=2022-10-26T06:54:05))
2022-10-26 16:09:37 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8790158641819598980, userId=4375873333162715913, text=Fusce Fusce ultricies pulvinar sit sit porttitor pulvinar Kafka sed purus congue Lorem congue dolor, createdAt=2022-10-23T21:16:22))
2022-10-26 16:09:37 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7335435059583473278, userId=554017598315672785, text=dolor Maecenas Fusce malesuada sit pulvinar ultricies ipsum Kafka purus Lorem congue porttitor purus Lorem, createdAt=2022-10-26T02:08:55))
2022-10-26 16:09:38 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4623660921439308539, userId=8905293325523491668, text=Lorem Lorem dolor massa libero massa sit Lorem Kafka magna adipiscing sit elit sit dolor, createdAt=2022-10-26T02:09:45))
2022-10-26 16:09:38 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2322913515609825637, userId=3220367033608856968, text=posuere malesuada pulvinar posuere sed ultricies Maecenas dolor Kafka porttitor lectus elit Fusce Lorem elit, createdAt=2022-10-26T02:44:08))
2022-10-26 16:09:39 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8833742152098816116, userId=8736073051336120046, text=magna ipsum adipiscing ipsum consectetuer ipsum ultricies pulvinar Kafka amet congue massa porttitor pulvinar Lorem, createdAt=2022-10-26T02:49:58))
2022-10-26 16:09:39 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1998834808286608972, userId=5924299663208548687, text=purus ipsum lectus consectetuer Fusce elit Fusce consectetuer Kafka malesuada lectus Fusce lectus ipsum massa, createdAt=2022-10-26T03:04:48))
2022-10-26 16:09:40 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7115518969556282243, userId=7847838791375423010, text=Fusce magna amet elit amet amet sed elit Kafka Fusce massa Maecenas Lorem consectetuer Lorem, createdAt=2022-10-26T03:27:58))
2022-10-26 16:09:40 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7987438513348831553, userId=5075913144084633751, text=ipsum libero massa libero malesuada ultricies lectus magna Kafka adipiscing magna pulvinar Fusce Lorem ultricies, createdAt=2022-10-26T03:31:19))
2022-10-26 16:09:41 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8957996806074522726, userId=5414998722877923147, text=ipsum malesuada sit congue amet amet porttitor ipsum Kafka lectus amet ipsum pulvinar pulvinar ipsum, createdAt=2022-10-26T03:37:29))
2022-10-26 16:09:41 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2982576320895035395, userId=4460451123099926770, text=congue lectus ultricies ultricies magna ipsum adipiscing magna Kafka ipsum porttitor malesuada Maecenas Lorem purus, createdAt=2022-10-26T03:40:09))
2022-10-26 16:09:42 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1273113703234695904, userId=3527210415991554547, text=congue Maecenas consectetuer Fusce Fusce pulvinar ultricies adipiscing Kafka amet adipiscing sed Fusce adipiscing congue, createdAt=2022-10-26T04:06:59))
2022-10-26 16:09:42 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6869455588473282202, userId=3516257611512856542, text=posuere malesuada pulvinar elit Maecenas dolor Maecenas sit Kafka congue elit lectus porttitor posuere Maecenas, createdAt=2022-10-26T04:07:39))
2022-10-26 16:09:43 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1533842779808055530, userId=8829457435551339851, text=libero ultricies lectus amet sed consectetuer elit congue Kafka congue magna Maecenas pulvinar amet magna, createdAt=2022-10-26T04:22:09))
2022-10-26 16:09:43 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4760355173446819848, userId=6219908731438750768, text=sed posuere ipsum dolor lectus pulvinar sed posuere Kafka sit ipsum ultricies massa adipiscing amet, createdAt=2022-10-26T06:53:21))
2022-10-26 16:09:44 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4752479042878386106, userId=3184689944024894112, text=sed adipiscing ipsum lectus ultricies ipsum purus congue Kafka adipiscing elit lectus congue Lorem posuere, createdAt=2022-10-26T06:56:15))
2022-10-26 16:09:44 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7315798707519827080, userId=5006472506157505225, text=ultricies consectetuer dolor posuere Maecenas massa consectetuer congue Kafka ipsum ipsum porttitor ultricies magna amet, createdAt=2022-10-26T06:58:35))
2022-10-26 16:09:45 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6194290707569575778, userId=2956752399603769869, text=Lorem lectus elit purus elit porttitor magna magna Kafka amet congue massa massa sed ipsum, createdAt=2022-10-23T20:58:04))
2022-10-26 16:09:45 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3326578192807796969, userId=2938489175379895936, text=ipsum sit posuere consectetuer pulvinar ipsum ipsum posuere Kafka Maecenas sit porttitor consectetuer Lorem purus, createdAt=2022-10-26T02:05:45))
2022-10-26 16:09:45 [parallel-7] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79d82798, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 16:09:45 [reactor-http-nio-1] INFO  reactor.Flux.Map.1 - onContextUpdate(Context2{interface org.springframework.web.server.ServerWebExchange=org.springframework.web.server.adapter.DefaultServerWebExchange@79d82798, interface org.springframework.security.core.context.SecurityContext=MonoFlatMap})
2022-10-26 16:09:46 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7862114618694105746, userId=1535799071648877249, text=malesuada posuere Fusce magna Fusce dolor porttitor elit Kafka lectus consectetuer elit posuere purus libero, createdAt=2022-10-26T02:19:55))
2022-10-26 16:09:46 [parallel-8] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:09:46 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4306449912629162336, userId=769667281059908342, text=sit libero congue purus posuere posuere elit adipiscing Kafka sed Maecenas magna libero ultricies ultricies, createdAt=2022-10-26T02:24:05))
2022-10-26 16:09:47 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3174392329759730661, userId=6293159662430749063, text=lectus ipsum Maecenas adipiscing porttitor lectus amet sed Kafka adipiscing Maecenas libero malesuada libero massa, createdAt=2022-10-26T02:40:38))
2022-10-26 16:09:47 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7645499246750613645, userId=5603330161908226259, text=adipiscing adipiscing Lorem congue magna posuere ultricies purus Kafka Fusce Maecenas ultricies Lorem pulvinar libero, createdAt=2022-10-26T03:07:18))
2022-10-26 16:09:48 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4195973637664439493, userId=7620167170180166787, text=malesuada amet lectus magna ipsum sit ipsum sed Kafka libero magna sed Lorem magna magna, createdAt=2022-10-26T03:22:48))
2022-10-26 16:09:48 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6367110868811534339, userId=6091035409797030018, text=elit porttitor elit purus purus malesuada purus ultricies Kafka ultricies Fusce posuere elit ipsum consectetuer, createdAt=2022-10-26T03:25:58))
2022-10-26 16:09:49 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5444532020187945127, userId=7064226458094107487, text=ipsum massa Lorem magna posuere Lorem lectus adipiscing Kafka congue sit massa adipiscing posuere porttitor, createdAt=2022-10-26T03:38:59))
2022-10-26 16:09:49 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=496270970494898763, userId=5693627554334387351, text=porttitor sit sit sed sed adipiscing sit adipiscing Kafka congue Lorem malesuada lectus elit pulvinar, createdAt=2022-10-26T03:59:39))
2022-10-26 16:09:50 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5423117100282899387, userId=3198787559665261208, text=posuere massa ultricies posuere dolor Maecenas sed purus Kafka pulvinar elit ultricies Fusce elit posuere, createdAt=2022-10-26T04:05:59))
2022-10-26 16:09:50 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4048169339396356160, userId=4030748126850360315, text=adipiscing sed ultricies pulvinar dolor Fusce magna adipiscing Kafka purus Fusce adipiscing Fusce Fusce elit, createdAt=2022-10-26T04:20:59))
2022-10-26 16:09:51 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8594696029686789380, userId=6686767677755044722, text=massa sit sed sed pulvinar congue sed adipiscing Kafka consectetuer malesuada purus porttitor sed dolor, createdAt=2022-10-26T06:14:15))
2022-10-26 16:09:51 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8963832427985551438, userId=7591036316675643304, text=malesuada consectetuer lectus Fusce libero adipiscing posuere purus Kafka malesuada congue consectetuer Lorem amet libero, createdAt=2022-10-26T06:19:35))
2022-10-26 16:09:52 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5136536012328683841, userId=9147890124661346724, text=Maecenas libero Lorem sit ultricies malesuada porttitor porttitor Kafka ipsum consectetuer Maecenas ipsum Lorem sed, createdAt=2022-10-26T06:34:25))
2022-10-26 16:09:53 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3012360671220387925, userId=4472643763227090701, text=Maecenas adipiscing porttitor libero purus libero posuere massa Kafka adipiscing lectus Maecenas amet porttitor lectus, createdAt=2022-10-26T06:49:35))
2022-10-26 16:09:53 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3885470771872143630, userId=8078091624312764249, text=consectetuer massa posuere magna adipiscing Fusce magna sit Kafka porttitor ipsum dolor libero consectetuer adipiscing, createdAt=2022-10-26T06:20:05))
2022-10-26 16:09:54 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5455143643334478851, userId=1599032393380866569, text=Lorem adipiscing pulvinar sit purus massa libero massa Kafka malesuada massa pulvinar amet Fusce libero, createdAt=2022-10-26T06:28:15))
2022-10-26 16:09:54 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4057866245775452577, userId=7245972675888674760, text=posuere Lorem sed elit ultricies elit magna amet Kafka Maecenas ipsum congue amet pulvinar pulvinar, createdAt=2022-10-26T06:29:35))
2022-10-26 16:09:55 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5813017563452018724, userId=6456647514371896902, text=amet Lorem libero sed dolor malesuada elit elit Kafka libero ultricies sed posuere dolor massa, createdAt=2022-10-26T06:30:45))
2022-10-26 16:09:55 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=342063335731346604, userId=5148058806369612414, text=pulvinar Maecenas sit ipsum malesuada posuere ultricies sed Kafka pulvinar sit malesuada sed posuere lectus, createdAt=2022-10-26T06:22:25))
2022-10-26 16:09:56 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4701817907219095326, userId=6548871663446602155, text=malesuada ultricies massa Lorem Lorem congue Maecenas magna Kafka massa amet adipiscing sed purus posuere, createdAt=2022-10-26T06:39:55))
2022-10-26 16:09:56 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1544381844141870010, userId=1787097378209897884, text=amet amet posuere ipsum Maecenas adipiscing amet posuere Kafka elit Fusce magna sed ipsum elit amet, createdAt=2022-10-23T21:00:24))
2022-10-26 16:09:57 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2306038802295193867, userId=8006439496644097549, text=sit elit Fusce Fusce Lorem lectus adipiscing ipsum Kafka massa congue purus pulvinar amet congue Lorem, createdAt=2022-10-23T21:13:17))
2022-10-26 16:09:57 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6761781249557718335, userId=2511679973596474954, text=adipiscing ultricies ultricies lectus pulvinar sed purus pulvinar Kafka amet amet libero libero consectetuer Lorem adipiscing, createdAt=2022-10-26T02:16:05))
2022-10-26 16:09:58 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=4735234215726660463, userId=7853494088214021169, text=Lorem adipiscing sit Maecenas amet purus amet sit Kafka Fusce sed pulvinar sit pulvinar porttitor Fusce, createdAt=2022-10-26T03:02:28))
2022-10-26 16:09:58 [parallel-16] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7720116854423122030, userId=6585716746488478378, text=Maecenas amet dolor posuere porttitor elit lectus sit Kafka consectetuer magna massa Lorem consectetuer lectus congue, createdAt=2022-10-26T03:17:38))
2022-10-26 16:09:58 [parallel-16] INFO  reactor.Flux.Map.1 - request(24)
2022-10-26 16:09:59 [parallel-1] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6929242181234077236, userId=5302300507730467329, text=lectus adipiscing magna Fusce Lorem elit ipsum sit Kafka massa Maecenas consectetuer dolor massa elit Fusce, createdAt=2022-10-26T03:31:29))
2022-10-26 16:09:59 [parallel-2] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7876367424145408112, userId=7745032189665525890, text=posuere lectus elit purus massa adipiscing amet magna Kafka dolor lectus Lorem ultricies purus congue sed, createdAt=2022-10-26T03:34:09))
2022-10-26 16:10:00 [parallel-3] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=1549437790275449684, userId=3130017286670649235, text=purus sit massa ultricies pulvinar consectetuer dolor Maecenas Kafka magna elit libero posuere purus sit adipiscing, createdAt=2022-10-26T03:43:19))
2022-10-26 16:10:00 [parallel-4] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2581711551227871167, userId=2586336402313449491, text=Maecenas magna amet amet lectus purus congue consectetuer Kafka Maecenas Lorem consectetuer purus purus purus Lorem, createdAt=2022-10-26T03:45:49))
2022-10-26 16:10:01 [parallel-5] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3537808153366452896, userId=4851569345528916890, text=Lorem lectus Fusce congue magna posuere posuere elit Kafka lectus posuere libero sed congue consectetuer Maecenas, createdAt=2022-10-26T03:49:09))
2022-10-26 16:10:01 [parallel-6] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6534431938756324740, userId=4630704006838038356, text=ipsum porttitor purus Fusce ultricies malesuada porttitor Fusce Kafka adipiscing Lorem adipiscing massa pulvinar amet ipsum, createdAt=2022-10-26T04:15:29))
2022-10-26 16:10:02 [parallel-7] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5062695010090320048, userId=1814442280174083086, text=magna massa Lorem pulvinar Lorem pulvinar amet sed Kafka congue malesuada amet lectus pulvinar dolor Lorem, createdAt=2022-10-23T13:31:42))
2022-10-26 16:10:02 [parallel-8] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=6496903228726649973, userId=3783348925103459932, text=sed Fusce lectus Maecenas magna ultricies malesuada amet Kafka sed massa congue libero ultricies ultricies magna, createdAt=2022-10-26T02:05:35))
2022-10-26 16:10:03 [parallel-9] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=7507629396399269355, userId=749658318228182798, text=adipiscing sed amet ultricies sed sit Fusce Fusce Kafka dolor Fusce congue ipsum amet congue adipiscing, createdAt=2022-10-26T03:27:08))
2022-10-26 16:10:03 [parallel-10] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8116769199728804015, userId=8467450698318679279, text=pulvinar malesuada libero Lorem pulvinar ipsum Lorem elit Kafka magna ultricies purus porttitor consectetuer libero sed, createdAt=2022-10-26T03:47:49))
2022-10-26 16:10:04 [parallel-11] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=3117329096554536332, userId=8469882074609345034, text=sed sit malesuada porttitor sed amet ultricies pulvinar Kafka amet elit Fusce purus ultricies massa ipsum, createdAt=2022-10-26T06:17:05))
2022-10-26 16:10:04 [parallel-12] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8488335948202842037, userId=884678521297758087, text=lectus adipiscing lectus ultricies sed congue adipiscing libero Kafka Maecenas magna Maecenas purus massa Fusce dolor, createdAt=2022-10-26T06:13:45))
2022-10-26 16:10:05 [parallel-13] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=2270559425364208577, userId=7308159293184831295, text=dolor amet elit Fusce consectetuer ipsum sed pulvinar Kafka amet malesuada congue libero malesuada libero adipiscing, createdAt=2022-10-26T06:20:35))
2022-10-26 16:10:05 [parallel-14] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=5883466880451969471, userId=3380566184564080076, text=libero porttitor dolor malesuada ipsum malesuada ultricies libero Kafka adipiscing sed Lorem amet amet sed Fusce, createdAt=2022-10-26T06:31:25))
2022-10-26 16:10:06 [parallel-15] INFO  reactor.Flux.Map.1 - onNext(ElasticQueryServiceResponseModel(id=8299261471085624360, userId=3742593650765105993, text=libero libero purus Fusce adipiscing sit Maecenas sed Kafka adipiscing adipiscing libero magna consectetuer amet pulvinar, createdAt=2022-10-26T06:51:35))
2022-10-26 16:10:06 [parallel-15] INFO  reactor.Flux.Map.1 - onComplete()
